https://claude.ai/chat/83a63aa7-68f7-4b5c-be9b-82b72310fac1

In the current setup there is a misunderstanding:

## Clarification: Signal Head, Signal group, Signalgeber, Signalgruppe -  Clarification of <vt> vs. signalGroup

### 1. Semantics according to the Specification:

DSRC:signalGroup:
Represents a logical identifier used in MAPEM/SPATEM messages to indicate a set of lanes or traffic movements (connections) at intersections. It is used at a logical level, reflecting combined signals applicable to particular connections or traffic movements.

<vt> (MapExtension:signalGroups primary/secondary):
The <vt> id is linked to physical or infrastructural signal group IDs, as known in local German traffic engineering systems.
The primary/secondary distinction indicates prioritization or an alternate grouping logic (e.g., supplementary signaling or pedestrian signaling attached to a vehicle movement).

In short:
- signalGroup in DSRC/MAPEM/SPATEM is logical and connection-focused (movement-centric).
- <vt> id in TrafficStreamConfigData explicitly relates to a German local physical/infrastructure signal group and can map to one or multiple DSRC:signalGroups.

---

### 2. Analysis of the Provided Example:

The DSRC signalGroup ids range higher (up to 22 in the provided XML), and the <vt> ids range up to 10 only.
This discrepancy arises naturally because multiple logical signal groups (C-ITS standard) can map to a single German physical signal group (as represented by <vt>).
The TrafficStreams <vt> defines a stable identifier for physically installed traffic-light groups at intersections (Signalgruppe in German traffic engineering). In contrast, the DSRC-defined signalGroup identifiers express each separate logical connection from a specific lane to another lane or road segment.
Thus, one physical <vt> (German signal group) can correlate with multiple logical DSRC signalGroups, which handle different connections controlled by the same physical signals.

Example from your XML:
- Physical Signal Group (German terminology): <vt>1 can logically control multiple different connections (DSRC:signalGroup 1, 3, etc.).

---

### 3. Legal and Practical Background in Germany:

In Germany, legal implications of traffic signaling require clarity regarding permitted movements. The SPATEM/MAPEM framework transmits:
- A logical signaling (signalGroup) describing permitted movements (left, right, straight, pedestrian) clearly defined in MAPEM.
- Legal relevance: vehicles must obey signals according to StVO (Straßenverkehrsordnung). The transmitted signalGroup states (event states such as "stop-And-Remain", "protected-Movement-Allowed") convey the current legal obligations applicable to vehicles for the defined connection.
- The physical grouping <vt> (German signal group) represents how the roadside signals are controlled physically at the intersection controller. Each signalGroup in the SPATEM is tied clearly back to MAPEM-defined connections, which link it to the correct physical German signal group (<vt>).

For instance, at an intersection:
- Physical German signal group (vt=1) = Left-turn signals on ingress lane 1.
- C-ITS may define multiple logical signalGroups for different movements (e.g., left-turn into lane A or left-turn into lane B), each receiving a separate DSRC signalGroup ID in SPATEM.
- The logical DSRC signalGroup would be responsible for conveying the current state (e.g., permissive, protected, or stop) of these specific movements, thus linking them back to the single German physical group id (vt=1).

---

### 4. Practical Recommendation (to Avoid Confusion):

When documenting and mapping intersections:
Clearly distinguish between physical German IDs (<vt>) and logical DSRC signalGroups.
Document clearly which DSRC signal groups (logical) map onto each German physical signal group (vt).
Note explicitly that one German physical signal group can control multiple logical DSRC signalGroups (connections).
---

## Summary (Brief):
- <vt>: corresponds to the physical German signal groups (infrastructure-side).
- DSRC:signalGroup: a logical grouping per defined traffic movements, controlled by one or more physical <vt> signal groups.

This distinction is key for a proper understanding of MAPEM/SPATEM messages, the precise mapping to real-world signal heads (Signalgeber), and ultimately, compliance with traffic rules according to German law (StVO).

To write clear, unambiguous, and easily maintainable code, especially when parsing XML messages in a mixed terminology context (C-ITS vs. German traffic engineering), I recommend the following consistent naming convention:

### Recommended Naming Convention:

Physical Signal Group (German "Signalgruppe"):
Use the term: physicalSignalGroupId
Source element: <MapExtension:vt>
Meaning: Refers explicitly to the physical traffic signal group id as defined by German infrastructure control.

Logical Signal Group (C-ITS/SPATEM/MAPEM):
Use the term: logicalSignalGroupId
Source element: <DSRC:signalGroup>
Meaning: Refers to logical identifiers for movements (lane-to-lane connections), typically described in MAPEM and SPATEM messages.

Physical Signal Head (German "Signalgeber"):
Use the term: signalHeadId
Source: usually not directly in MAPEM/SPATEM but relevant when referring explicitly to physical hardware.
Meaning: individual physical traffic signal (e.g. Red/Amber/Green lights).

---

## Example (Recommended Documentation Style):

| physicalSignalGroupId (vt) | DSRC signalGroup IDs | Explanation |
|-----------------------------|------------------------------------|------------------|
| 1 | [1, 3, 7] | Controls multiple movements (e.g., straight, left-turn) |
| 2 | 8, 12 | Controls different connections at intersection |
| 3 | 5, 9 | Another physical group controlling logically distinct movements |


---

### Legal and Practical Background (Germany, StVO context):

physicalSignalGroupId corresponds directly to the legally relevant traffic control group ("verkehrsrechtliche Signalgruppe").
signalGroup (logical) in SPATEM indicates permitted or prohibited movements in accordance with StVO. For instance, stop-And-Remain means mandatory stop at stop line; protected-Movement-Allowed is analogous to a green light.
Software processing SPATEM messages must map logical signalGroup ids to physical signal groups (physicalSignalGroupId) to accurately reflect traffic laws for driver-assistance systems or automated vehicles.
---

### Recommended Best Practice to Prevent Future Misunderstandings:

Always use explicit terms (physicalSignalGroupId, logicalSignalGroupId, and signalHeadId) to avoid ambiguity.
Clearly document the mapping between logical and physical groups in a separate metadata or intersection mapping configuration file.
This ensures clarity for developers, integrators, and engineers, and promotes alignment with existing German traffic control and legal definitions.


## Cardinal direction vs. relative direction

Directions are currently represented by cardinal directions, however getting right, left and stright connected lanes for cross section axes is something I want to have changed. The cardinal directions should be extracted from the node coordinates relative to the center and their respective angle in relation to the gps coordinates and be present as an attribute in the Lane Objects. But the connections for lanes have the DSRC:maneuver field:

AllowedManeuvers ::= BIT STRING {
    -- With bits as defined:
    -- Allowed maneuvers at path end (stop line)
    -- All maneuvers with bits not set are therefore prohibited !
    -- A value of zero shall be used for unknown, indicating no Maneuver
    maneuverStraightAllowed      (0),
                                  -- a Straight movement is allowed in this lane
    maneuverLeftAllowed          (1),
                                 -- a Left Turn movement is allowed in this lane
    maneuverRightAllowed         (2),
                                 -- a Right Turn movement is allowed in this lane
    maneuverUTurnAllowed         (3),
                                 -- a U turn movement is allowed in this lane
    maneuverLeftTurnOnRedAllowed (4),
                                 -- a Stop, and then proceed when safe movement
                                 -- is allowed in this lane
    maneuverRightTurnOnRedAllowed (5),
                                 -- a Stop, and then proceed when safe movement
                                 -- is allowed in this lane
    maneuverLaneChangeAllowed    (6),
                                 -- a movement which changes to an outer lane
                                 -- on the egress side is allowed in this lane
                                 -- (example: left into either outbound lane)
    maneuverNoStoppingAllowed    (7),
                                 -- the vehicle should not stop at the stop line
                                 -- (example: a flashing green arrow)
    yieldAllwaysRequired         (8),
                                 -- the allowed movements above are not protected
                                 -- (example: an permanent yellow condition)
    goWithHalt                   (9),
                                 -- after making a full stop, may proceed
    caution                      (10),
                                 -- proceed past stop line with caution
    reserved1                    (11)
                                 -- used to align to 12 Bit Field

   } (SIZE(12))

The information in the data element
‘maneuver’ in ‘connectingLane’ shall
be based on the lane marking arrows
on the lane itself (if present).
For data element ‘maneuver’ in
‘connectingLane’ exactly one of the
first four bits of
DE_AllowedManeuvers (i.e. exactly
one direction indication per
connectingLane) shall be set.
The maneuver indication
“maneuverleft-
/maneuverRightTurnonRedAllowed”
and “maneuverLaneChangeAllowed”
shall not be used. These permissions
must be expressed by
MovementPhaseState in SPATEM.
Note: All other bits of the
DE_AllowedManeuvers may be set
but will not be used by current vehicle
implementations

Meaning for us the first four bits are relevant and need to be read out from DSRC:maneuver to get the information for right left straight connections from ingress lanes for further checks.

Meaning in your code the Intersection, MapemParse StgParser classes (and others) need to be updated as described above to prevent ambiguity and differentiation between cardinal direction and maneuvers from (ingress) lanes. Write out all class names that need to be changed or added first. Write out only the list of classes that need to be updated or changed, then wait for the next prompt listing the classes to write out.