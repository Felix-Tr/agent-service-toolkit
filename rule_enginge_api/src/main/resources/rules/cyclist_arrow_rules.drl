package de.trafficvalidator.rules;

import de.trafficvalidator.model.Connection;
import de.trafficvalidator.model.SignalGroup;
import de.trafficvalidator.model.ValidationResult;
import de.trafficvalidator.model.Lane;
import de.trafficvalidator.model.Direction;

import java.util.List;

dialect "java"

/**
 * Rules for validating if a green cyclist arrow sign (Verkehrszeichen 721) can be installed
 * at a specific right turn connection.
 * 
 * Based on VwV-StVo zu § 37, XI., 1. a-c:
 * a) No conflict-free left turn signals for opposing traffic
 * b) No green diagonal arrow for opposing left-turning traffic
 * c) No directional arrows in the traffic lights for the right-turn lane
 */

/**
 * This rule will mark connections that aren't cyclist right turns as not applicable.
 * Only connections explicitly marked as cyclist right turn should be validated.
 */
rule "IdentifyRelevantConnections"
    salience 100 // Higher priority - run this first
    when
        $connection : Connection(isCyclistRightTurn() == false)
        $result : ValidationResult(connection == $connection)
    then
        // No action needed - we'll just skip further rule processing for this connection
        // This is a simple filter rule - only cyclist right turn connections proceed to the next rules
end

/**
 * Rule to check for conflict-free left turn signals from opposing traffic
 * VwV-StVo zu § 37, XI., 1. a)
 */
rule "CheckConflictFreeLeftTurnSignals"
    when
        // The cyclist's right turn connection
        $rightTurn : Connection(isCyclistRightTurn())
        $result : ValidationResult(connection == $rightTurn)
        
        // Find any left turn from opposite direction
        $leftTurn : Connection(
            isLeftTurn() == true, 
            this != $rightTurn,
            isFromOppositeDirectionOf($rightTurn) == true,
            sharesEgressLaneWith($rightTurn) == true
        )
        
        // Check if it has a signal group that only controls left turns
        $signalGroup : SignalGroup(
            controlsOnlyLeftTurns() == true
        ) from $leftTurn.getSignalGroup()
    then
        $result.addFailure("VwV-StVo zu § 37, XI., 1. a) - dem entgegenkommenden Verkehr wird ein konfliktfreies Abbiegen nach links signalisiert (relevante Signalgruppe: " + $signalGroup.getName() + ")");
end

/**
 * Rule to check for diagonal green arrows for opposing left-turning traffic
 * VwV-StVo zu § 37, XI., 1. b)
 */
rule "CheckDiagonalGreenArrows"
    when
        // The cyclist's right turn connection
        $rightTurn : Connection(isCyclistRightTurn())
        $result : ValidationResult(connection == $rightTurn)
        
        // Find any left turn from opposite direction
        $leftTurn : Connection(
            isLeftTurn() == true, 
            this != $rightTurn,
            isFromOppositeDirectionOf($rightTurn) == true,
            sharesEgressLaneWith($rightTurn) == true
        )
        
        // Check if it has a diagonal green arrow signal group
        $signalGroup : SignalGroup(
            isDiagonalLeftTurn() == true
        ) from $leftTurn.getSignalGroup()
    then
        $result.addFailure("VwV-StVo zu § 37, XI., 1. b) - für den entgegenkommenden Linksabbieger wird der grüne Pfeil gemäß § 37 Abs. 2 Nr. 1 Satz 4 verwendet (relevante Signalgruppe: " + $signalGroup.getName() + ")");
end

/**
 * Rule to check for directional arrows in traffic lights
 * VwV-StVo zu § 37, XI., 1. c)
 */
rule "CheckDirectionalArrowsInTrafficLights"
    when
        $rightTurn : Connection(isCyclistRightTurn())
        $result : ValidationResult(connection == $rightTurn)
        $signalGroup : SignalGroup(
            isBicycleSignal() == false,
            isAdditionalRightTurnArrow() == true
        ) from $rightTurn.getSignalGroup()
    then
        $result.addFailure("VwV-StVo zu § 37, XI., 1. c) - Pfeile in den für den Rechtsabbieger gültigen Lichtzeichen schreiben die Fahrtrichtung vor (relevante Signalgruppe: " + $signalGroup.getName() + ")");
end


/**
 * Rule to mark valid connections
 */
rule "MarkAsPotentiallyValid"
    when
        $connection : Connection(isCyclistRightTurn())
        $result : ValidationResult(connection == $connection, isValid())
    then
        System.out.println("Für die Fahrlinie " + $connection.getId() + " ist ein VZ721 möglicherweise zulässig, sollten allerdings noch die Kriterien " +
         " neben VwV-StVo zu § 37, XI., 1. a) - c) beurteilt werden");
end